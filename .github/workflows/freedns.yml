name: Publish Fraidex Data to npm

on:
  schedule:
    - cron: "0 * * * *" # Runs every hour.
  workflow_dispatch: # Allows manual triggering from the Actions tab
  push:
    branches:
      - main # Or your default branch (e.g., master)
    paths:
      - "parser.py" # Only trigger on push if the parser script itself changes

jobs:
  build-and-publish-data:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required to checkout the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # Using a specific Python version

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 lxml

      - name: Run parser to generate fraidex.json
        id: run_parser
        run: |
          echo "Running parser.py to generate fraidex.json..."
          python parser.py
          if [ ! -f "fraidex.json" ]; then
            echo "Error: fraidex.json was not created by parser.py!"
            exit 1
          fi
          echo "fraidex.json created successfully."

      - name: Prepare data package for npm
        id: package_prep
        run: |
          mkdir -p data-package
          mv fraidex.json data-package/

          # Versioning: Using 0.0.0-YYYYMMDD.RUN_NUMBER (e.g., 0.0.0-20250604.24)
          # Date components are UTC. Month and day will have leading zeros if single digit.
          VERSION_DATE_SUFFIX=$(date -u +'%Y%m%d') 
          PACKAGE_VERSION="0.0.0-${VERSION_DATE_SUFFIX}.${{ github.run_number }}"

          # Define the npm package name.
          # IMPORTANT: Replace '@YOUR_NPM_USERNAME_OR_ORG' with your actual npm username or organization scope.
          # If you don't use a scope, ensure the package name is unique on npm.
          # Example: PACKAGE_NAME="fraidex-data" or PACKAGE_NAME="@my-org/fraidex-data"
          PACKAGE_NAME="@idanya/fraidex" # Default, adjust if needed

          echo "Preparing package: ${PACKAGE_NAME} version ${PACKAGE_VERSION}"

          # Create package.json for the data package
          cat <<EOF > data-package/package.json
          {
            "name": "${PACKAGE_NAME}",
            "version": "${PACKAGE_VERSION}",
            "description": "DNS domain data from freedns.afraid.org, generated by the fraidex parser. Updated periodically.",
            "main": "fraidex.json",
            "files": [
              "fraidex.json"
            ],
            "repository": {
              "type": "git",
              "url": "git+https://github.com/${{ github.repository }}.git"
            },
            "keywords": [
              "dns",
              "freedns",
              "afraid.org",
              "domains",
              "data",
              "fraidex"
            ],
            "author": "${{ github.repository_owner }} (https://github.com/${{ github.repository_owner }})",
            "license": "MIT",
            "publishConfig": {
              "access": "public"
            }
          }
          EOF
          echo "Generated data-package/package.json"
          echo "--- Contents of data-package/package.json ---"
          cat data-package/package.json
          echo "---------------------------------------------"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org/" # Point to the public npm registry

      - name: Verify package contents (Dry Run)
        working-directory: ./data-package
        run: npm pack --dry-run # Shows what would be included in the package

      - name: Publish to npm
        # This condition ensures publishing only happens on scheduled runs, manual dispatches,
        # or pushes to the 'main' (or your default) branch.
        if: |
          github.event_name == 'schedule' || 
          github.event_name == 'workflow_dispatch' || 
          (github.event_name == 'push' && github.ref == 'refs/heads/main')
        working-directory: ./data-package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
